[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nBeyond ggplot2 Annotation:ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n             fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_economist()+\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_ipsum()+\n  ggtitle(\"Distribution of Maths scores\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_ipsum(axis_text_size = 18,\n              base_size = 15,\n    grid = \"Y\")+\n  ggtitle(\"Distribution of Maths scores\")\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np1 + p2\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n(p1 /p2) |p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np2 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\np2 + inset_element(p1,\n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\npatchwork <- (p1 /p2) |p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class_Ex01",
    "section": "",
    "text": "Getting started\n\npacman::p_load(tidyverse)\n\nImporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nggplot(data = exam_data,\n       aes(y=RACE))+\n  geom_bar()+\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"light blue\", color = \"light blue\", size = 0.5, linetype = \"solid\"),\n    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = \"white\"), \n    panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = \"white\"))\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = reorder(RACE,RACE,\n                function(x)-length(x))))+\n         geom_bar()+\n  geom_text(stat=\"count\",\n            aes(label = paste0(..count.., \", \",\n            round(..count../sum(..count..)*100, 1), \"%\")), vjust = -0.5)+\n  ylim(0,220)+\n  ylab(\"No. of Pupils\")+\n  xlab(\"Race\")+\n  theme(axis.title.y=element_text(angle = 0))\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins=20)\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS))+\n  geom_histogram(fill = \"light blue\",\n                 bins = 20,\n                 color = \"black\")+\n  geom_vline(aes(xintercept = mean(MATHS, na.rm = T)),\n             color = \"red\",\n             linetype = \"dashed\",\n             size = 1)+\n  geom_vline(aes(xintercept = median(MATHS, na.rm = T)),\n             color = \"dark blue\",\n             linetype = \"dashed\",\n             size = 1)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= ENGLISH)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ GENDER)\n\n\n\n\n\ndata <- exam_data\nd_bg <- data[,-3]\n\nggplot(data=exam_data, \n       aes(x= ENGLISH, fill = GENDER)) +\n  geom_histogram(bins=20,\n                 color = \"black\")+\n  geom_histogram(data=d_bg, fill = \"grey\", alpha = .5)+\n    facet_wrap(~ GENDER)+\n      guides(fill = FALSE)+\n  theme_bw()+\n  ylim(0,30)\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS,\n           y = ENGLISH))+\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n  geom_hline(yintercept = 50,\n             linetype=\"dashed\",\n             color = \"grey60\",\n             size=1)+\n  geom_vline(xintercept = 50,\n             linetype=\"dashed\",\n             color = \"grey60\",\n             size=1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(rstatix, gt, patchwork, tidyverse)\n\n\nexam_data = read_csv(\"data/Exam_data.csv\")\n\nVisualising Normal Distribution A QQ plot, short for “quantile-quantile” plot, is used to assess whether or not a set of data potentially came from some theoretical distribution. In most cases, this type of plot is used to determine whether or not a set of data follows a normal distribution.\nif the data is normally distributed the points in a QQ plot will like on a straight diagonal line. Conversely, if the points deviate significantly from the straight diagonal line, then it’s less likely that the data is normally distributed.\nstat_qq_line() provide the line stat_qq() provide the dots echo:false will only plot out the graph eval: false will only show the code chunk\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample = ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\nCombining statistical graph and analysis table\nNeed to install webshot\n:::panel-tabset"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "data pre-processing\nload packages\n\npacman::p_load(ggstatsplot, ggthemes, plotly, corrplot, lubridate, ggpubr, plotly, treemap, hrbrthemes, ggrepel, RColorBrewer, gganimate, viridis, ggridges, ggrepel, testthat, hmisc, tidyverse, skimr, DT)\n\nInstalling package into 'C:/Users/ziwei/AppData/Local/R/win-library/4.2'\n(as 'lib' is unspecified)\n\n\nWarning: package 'hmisc' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: Perhaps you meant 'Hmisc' ?\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2/PACKAGES'\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'hmisc'\n\n\nWarning in pacman::p_load(ggstatsplot, ggthemes, plotly, corrplot, lubridate, : Failed to install/load:\nhmisc\n\n\nload financial journal dataset\n\nfinancialjournal <- read_csv(\"Take-home_Ex01/FinancialJournal.csv\")\n\nRows: 1513636 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): category\ndbl  (2): participantId, amount\ndttm (1): timestamp\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\ndisplay the columns and their definition and data type\nExplore data\n\nskimr::skim(financialjournal)\n\n\nData summary\n\n\nName\nfinancialjournal\n\n\nNumber of rows\n1513636\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\nPOSIXct\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ncategory\n0\n1\n4\n14\n0\n6\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nparticipantId\n0\n1\n480.90\n295.89\n0.00\n222.00\n464\n726.0\n1010.00\n▇▇▇▆▆\n\n\namount\n0\n1\n20.05\n111.77\n-1562.73\n-5.59\n-4\n21.6\n4096.53\n▁▇▁▁▁\n\n\n\nVariable type: POSIXct\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\ntimestamp\n0\n1\n2022-03-01\n2023-02-28 23:55:00\n2022-08-25 15:00:00\n87366\n\n\n\n\n\n\nglimpse(financialjournal,30)\n\nRows: 1,513,636\nColumns: 4\n$ participantId <dbl> 0, 0, …\n$ timestamp     <dttm> 2022-…\n$ category      <chr> \"Wage\"…\n$ amount        <dbl> 2472.5…\n\n\ndatatable\n\nDT::datatable(head(financialjournal,20), class = \"display\")\n\n\n\n\n\n\nsort the dataset by participantid\n\nfinancialjournal <- financialjournal[order(financialjournal$participantId),]\n\ncheck missing values\n\ncolSums(is.na(financialjournal))\n\nparticipantId     timestamp      category        amount \n            0             0             0             0 \n\n\ncheck for duplicates\n\ndup_rows <- duplicated(financialjournal)\n\nfinancialjournal[dup_rows, ]\n\n# A tibble: 1,113 × 4\n   participantId timestamp           category   amount\n           <dbl> <dttm>              <chr>       <dbl>\n 1             0 2022-03-01 00:00:00 Shelter    -555. \n 2             0 2022-03-01 00:00:00 Education   -38.0\n 3             1 2022-03-01 00:00:00 Shelter    -555. \n 4             1 2022-03-01 00:00:00 Education   -38.0\n 5             2 2022-03-01 00:00:00 Shelter    -557. \n 6             2 2022-03-01 00:00:00 Education   -12.8\n 7             3 2022-03-01 00:00:00 Shelter    -555. \n 8             3 2022-03-01 00:00:00 Education   -38.0\n 9             4 2022-03-01 00:00:00 Shelter   -1556. \n10             4 2022-03-01 00:00:00 Education   -12.8\n# ℹ 1,103 more rows\n\n\nremove duplicates\n\nfinancialjournal_distinct <- unique(financialjournal)\n\nnew variables (year, month, day, morning, noon, afternoon, midnight) split by space first\n\nfinancialjournal_distinct[c('Date', 'Time')] <- str_split_fixed(financialjournal_distinct$timestamp, ' ', 2)\n\nsplit the date into year, month, day\n\nfinancialjournal_distinct[c('Year', 'Month', 'Day')] <- str_split_fixed(financialjournal_distinct$Date, '-', 3)\n\nsplit the time into morning, noon, afternoon, evening, midnight\n\nfinancialjournal_distinct$Time <- hms(financialjournal_distinct$Time)\n\nbreaks <- hour(hm(\"00:00\", \"6:00\", \"12:00\", \"18:00\", \"23:59\"))\n\nlabels <- c(\"Midnight\", \"Morning\", \"Afternoon\",\"Evening\")\n\nfinancialjournal_distinct$daytime <- cut(x=hour(financialjournal_distinct$Time), breaks = breaks, labels = labels, include.lowest = TRUE)\n\ndrop time and timestamp\n\nfinancialjournal_distinct <- subset(financialjournal_distinct, select = -c(Time, timestamp))\n\nload participants dataset\n\nparticipants <- read_csv(\"Take-home_Ex01/Participants.csv\")\n\nRows: 1011 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): educationLevel, interestGroup\ndbl (4): participantId, householdSize, age, joviality\nlgl (1): haveKids\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\ncheck missing values\n\ncolSums(is.na(participants))\n\n participantId  householdSize       haveKids            age educationLevel \n             0              0              0              0              0 \n interestGroup      joviality \n             0              0 \n\n\nExplore data\n\nskimr::skim(participants)\n\n\nData summary\n\n\nName\nparticipants\n\n\nNumber of rows\n1011\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nlogical\n1\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\neducationLevel\n0\n1\n3\n19\n0\n4\n0\n\n\ninterestGroup\n0\n1\n1\n1\n0\n10\n0\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nhaveKids\n0\n1\n0.3\nFAL: 710, TRU: 301\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nparticipantId\n0\n1\n505.00\n291.99\n0\n252.50\n505.00\n757.50\n1010\n▇▇▇▇▇\n\n\nhouseholdSize\n0\n1\n1.96\n0.79\n1\n1.00\n2.00\n3.00\n3\n▇▁▇▁▆\n\n\nage\n0\n1\n39.07\n12.38\n18\n29.00\n39.00\n50.00\n60\n▇▇▇▇▇\n\n\njoviality\n0\n1\n0.49\n0.29\n0\n0.24\n0.48\n0.75\n1\n▇▇▇▇▇\n\n\n\n\n\n\nglimpse(participants,30)\n\nRows: 1,011\nColumns: 7\n$ participantId  <dbl> 0, 1,…\n$ householdSize  <dbl> 3, 3,…\n$ haveKids       <lgl> TRUE,…\n$ age            <dbl> 36, 2…\n$ educationLevel <chr> \"High…\n$ interestGroup  <chr> \"H\", …\n$ joviality      <dbl> 0.001…\n\n\ndatatable\n\nDT::datatable(head(participants,20), class = \"display\")\n\n\n\n\n\n\nNEED TO PIVOT THE TABLE\nNORMALITY ASSUMPTION (plot ggplot to see if the line is deviated)\nggstatplot\nNEED TO BE REPRODUCIBLE\nEDA\nall superset is not frequenr"
  }
]