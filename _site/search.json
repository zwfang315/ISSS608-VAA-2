[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nBeyond ggplot2 Annotation:ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n             fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_economist()+\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_ipsum()+\n  ggtitle(\"Distribution of Maths scores\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_ipsum(axis_text_size = 18,\n              base_size = 15,\n    grid = \"Y\")+\n  ggtitle(\"Distribution of Maths scores\")\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np1 + p2\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n(p1 /p2) |p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np2 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\np2 + inset_element(p1,\n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\npatchwork <- (p1 /p2) |p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "Install packages\n\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\nData Import\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nVisualising Distribution with Ridgeline Plot: ggridges method\n\nThe plotThe code chunk\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\nVisualising Distribution with Ridgeline Plot: Varying fill colors along the x axis\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\nWarning: `stat(x)` was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(x)` instead.\n\n\nPicking joint bandwidth of 3.18\n\n\n\n\n\nMapping the probabilities directly onto colour\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\nPicking joint bandwidth of 3.18\n\n\n\n\n\nRidgeline plots with quantile lines\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\nPicking joint bandwidth of 3.18\n\n\nWarning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead.\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\nPicking joint bandwidth of 3.18\n\n\n\n\n\nPlotting a Half Eye graph\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\nAdding the boxplot with geom_boxplot()\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\nAdding the Dot plots with stat_dots()\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\n\nRows: 54 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): label, Department, Title\ndbl (1): id\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\nRows: 9063 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): SentDate, Subject, MainSubject, sourceLabel, targetLabel\ndbl  (2): source, target\ntime (1): SentTime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'source', 'target'. You can override using\nthe `.groups` argument.\n\n\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows\n\n\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\nUsing \"stress\" as default layout\n\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n\n\n\n\n\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\nUsing \"stress\" as default layout\n\ng + theme_graph()\n\n\n\n\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\nUsing \"stress\" as default layout\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\ng <- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nset_graph_style() \n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\ng <- GAStech_graph %>%\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\ng <- GAStech_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\ng <- GAStech_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `community = as.factor(group_edge_betweenness(weights = Weight,\n  directed = TRUE))`.\nCaused by warning in `cluster_edge_betweenness()`:\n! At core/community/edge_betweenness.c:492 : Membership vector will be selected based on the highest modularity score.\n\ng + theme_graph()\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\nBuilding Interactive Network Graph with visNetwork\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'from'. You can override using the\n`.groups` argument.\n\n\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)\n\n\n\n\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\n\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class_Ex01",
    "section": "",
    "text": "Getting started\n\npacman::p_load(tidyverse)\n\nImporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nggplot(data = exam_data,\n       aes(y=RACE))+\n  geom_bar()+\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"light blue\", color = \"light blue\", size = 0.5, linetype = \"solid\"),\n    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = \"white\"), \n    panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = \"white\"))\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = reorder(RACE,RACE,\n                function(x)-length(x))))+\n         geom_bar()+\n  geom_text(stat=\"count\",\n            aes(label = paste0(..count.., \", \",\n            round(..count../sum(..count..)*100, 1), \"%\")), vjust = -0.5)+\n  ylim(0,220)+\n  ylab(\"No. of Pupils\")+\n  xlab(\"Race\")+\n  theme(axis.title.y=element_text(angle = 0))\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins=20)\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS))+\n  geom_histogram(fill = \"light blue\",\n                 bins = 20,\n                 color = \"black\")+\n  geom_vline(aes(xintercept = mean(MATHS, na.rm = T)),\n             color = \"red\",\n             linetype = \"dashed\",\n             size = 1)+\n  geom_vline(aes(xintercept = median(MATHS, na.rm = T)),\n             color = \"dark blue\",\n             linetype = \"dashed\",\n             size = 1)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= ENGLISH)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ GENDER)\n\n\n\n\n\ndata <- exam_data\nd_bg <- data[,-3]\n\nggplot(data=exam_data, \n       aes(x= ENGLISH, fill = GENDER)) +\n  geom_histogram(bins=20,\n                 color = \"black\")+\n  geom_histogram(data=d_bg, fill = \"grey\", alpha = .5)+\n    facet_wrap(~ GENDER)+\n      guides(fill = FALSE)+\n  theme_bw()+\n  ylim(0,30)\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS,\n           y = ENGLISH))+\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n  geom_hline(yintercept = 50,\n             linetype=\"dashed\",\n             color = \"grey60\",\n             size=1)+\n  geom_vline(xintercept = 50,\n             linetype=\"dashed\",\n             color = \"grey60\",\n             size=1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(rstatix, gt, patchwork, tidyverse)\n\n\nexam_data = read_csv(\"data/Exam_data.csv\")\n\nVisualising Normal Distribution A QQ plot, short for “quantile-quantile” plot, is used to assess whether or not a set of data potentially came from some theoretical distribution. In most cases, this type of plot is used to determine whether or not a set of data follows a normal distribution.\nif the data is normally distributed the points in a QQ plot will like on a straight diagonal line. Conversely, if the points deviate significantly from the straight diagonal line, then it’s less likely that the data is normally distributed.\nstat_qq_line() provide the line stat_qq() provide the dots echo:false will only plot out the graph eval: false will only show the code chunk\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample = ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\nCombining statistical graph and analysis table\nNeed to install webshot\n:::panel-tabset"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class_Ex05",
    "section": "",
    "text": "tbl_graph convert table into graph object\nonce has the model from tbl_graph, use ggraph to visualise THE GRAPH is messy, use differnt layout to make visualiziation easy\nlayout： force-directed (push nodes as far as possible, but still)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html",
    "title": "Exploring City of Engagement’s household demographic and spending patterns",
    "section": "",
    "text": "The City of Engagement is utilizing the survey data to shape its community revitalization plans, specifically with the aim of maximizing the impact of a recently acquired substantial city renewal grant.\n\n\nTo help the city effectively allocate resources towards significant community development initiatives, we need to offer valuable insights into household demographics and hidden patterns by analyzing survey data.\n\n\n\n\npacman::p_load(ggstatsplot, ggthemes, plotly, corrplot, lubridate, ggpubr, plotly, treemap, hrbrthemes, ggrepel, RColorBrewer, gganimate, viridis, ggridges, ggrepel, testthat, hmisc, tidyverse, skimr, DT, ggiraph, ggplot2, dplyr, broom)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#data-preparation---financial-journal",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#data-preparation---financial-journal",
    "title": "Exploring City of Engagement’s household demographic and spending patterns",
    "section": "Data Preparation - Financial journal",
    "text": "Data Preparation - Financial journal\nPrior to conducting data analysis and visualization, it is crucial to engage in data preparation procedures to guarantee the cleanliness, organization, and suitability of the data for analysis purposes. Presented below are data preparation steps.\n\nStep 1: Sort the data by participantId\n\n\nShow code\n##sort the dataset by participantid\nfinancialjournal <- financialjournal[order(financialjournal$participantId),]\n\n\n\n\nStep 2: Check missing values\n\n##check missing values\ncolSums(is.na(financialjournal))\n\nparticipantId     timestamp      category        amount \n            0             0             0             0 \n\n\n\n\nStep 3: Check any duplicates records\n1113 rows of duplicates were found.\n\n##check for duplicates\ndup_rows <- duplicated(financialjournal)\nfinancialjournal[dup_rows, ]\n\n# A tibble: 1,113 × 4\n   participantId timestamp           category   amount\n           <dbl> <dttm>              <chr>       <dbl>\n 1             0 2022-03-01 00:00:00 Shelter    -555. \n 2             0 2022-03-01 00:00:00 Education   -38.0\n 3             1 2022-03-01 00:00:00 Shelter    -555. \n 4             1 2022-03-01 00:00:00 Education   -38.0\n 5             2 2022-03-01 00:00:00 Shelter    -557. \n 6             2 2022-03-01 00:00:00 Education   -12.8\n 7             3 2022-03-01 00:00:00 Shelter    -555. \n 8             3 2022-03-01 00:00:00 Education   -38.0\n 9             4 2022-03-01 00:00:00 Shelter   -1556. \n10             4 2022-03-01 00:00:00 Education   -12.8\n# ℹ 1,103 more rows\n\n\n\n\nStep 4: Remove duplicates\nAfter removing duplicates, the dataset now comprises 1010 unique participants with a total of 1512523 records.\n\n\nShow code\n##remove duplicates\nfinancialjournal_distinct <- unique(financialjournal)\n\n\n\n\nStep 5: Transform Time into Year, Month\n\n\nShow code\n##Split the timestamp into date and time\nfinancialjournal_distinct[c('Date', 'Time')] <- str_split_fixed(financialjournal_distinct$timestamp, ' ', 2)\n\nfinancialjournal_distinct[c('Year', 'Month', 'Day')] <- str_split_fixed(financialjournal_distinct$Date, '-', 3)\n\n##Drop timestamp, time and day of the date\nfinancialjournal_distinct <- subset(financialjournal_distinct, select = -c(Time, timestamp, Day))\n\n\n\n\nStep 6: Data aggregation on amount by year and month\n\n\nShow code\ndf <- financialjournal_distinct\n\naggregated <- aggregate(amount ~ participantId + category + Year + Month, data = df, FUN =sum)\n\naggregated <- aggregated[order(aggregated$participantId,aggregated$category, aggregated$Year,aggregated$Month),]\n\n\n\n\nStep 7: Pivot table - one participant one record\n\n\nShow code\npivot_table <- pivot_wider(aggregated, names_from = category, values_from = amount, values_fill = 0)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#data-preparation---participants",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#data-preparation---participants",
    "title": "Exploring City of Engagement’s household demographic and spending patterns",
    "section": "Data preparation - Participants",
    "text": "Data preparation - Participants\n\nCheck missing values\n\ncolSums(is.na(participants))\n\n participantId  householdSize       haveKids            age educationLevel \n             0              0              0              0              0 \n interestGroup      joviality \n             0              0 \n\n\n\n\nMerge two tables by participantId\n\nmerged_table <- merge(pivot_table, participants, by = \"participantId\")\n\n\nglimpse(merged_table,30)\n\nRows: 10,691\nColumns: 15\n$ participantId  <dbl> 0, 0,…\n$ Year           <chr> \"2022…\n$ Month          <chr> \"03\",…\n$ Education      <dbl> -38.0…\n$ Food           <dbl> -268.…\n$ Recreation     <dbl> -348.…\n$ Shelter        <dbl> -554.…\n$ Wage           <dbl> 11931…\n$ RentAdjustment <dbl> 0, 0,…\n$ householdSize  <dbl> 3, 3,…\n$ haveKids       <lgl> TRUE,…\n$ age            <dbl> 36, 3…\n$ educationLevel <chr> \"High…\n$ interestGroup  <chr> \"H\", …\n$ joviality      <dbl> 0.001…\n\n\n\n\nChange Data Type\nparticipantId, year and month should treat as character\n\n\nShow code\nmerged_table$participantId <- as.character(merged_table$participantId)\nmerged_table$Year <- as.character(merged_table$Year)\nmerged_table$Month <- as.character(merged_table$Month)\n\n\n\n\nCreate new variables and grouping\n\nNew variables: “Savings”, “Total Expense” and “Date”\nTo see if we get catch any additional information or pattern in the dataset, we will create two new variables:\nSavings = Wage + Shelter + Education + Food + Recreation + RentAdjustment Total_Expense = Shelter + Education + Food + Recreation + RentAdjustment Date: “Year”-“Month” (e.g. 2022-03)\n\n\nShow code\nmerged_table <- merged_table %>% \n  mutate(Savings = Wage + Shelter + Education + Food + Recreation + RentAdjustment, Total_Expense = Shelter + Education + Food + Recreation + RentAdjustment)\n\nmerged_table$Date <- paste0(merged_table$Year, \"-\",merged_table$Month)\n\n\n\n\nNew grouping: age_group, wage_group, savings_group\nTo explore patterns, trends or relationships across different group more easily. We create following three groupings: age_group: break into 6 groups. 18-25, 25-32, 32-39, 39-46, 46-53, 53-60 wage_group: break into 5 groups. Super low, low, medium, high, super high savings_group: break into 5 groups. Super low, low, medium, high, super high\n\n\nShow code\nage_ranges <- c(18, 25, 32, 39, 46, 53,60)\nlabels <- paste(age_ranges[-length(age_ranges)], age_ranges[-1], sep = \"-\")\nmerged_table$age_group <- cut(merged_table$age, breaks = age_ranges, include.lowest = TRUE,labels = labels)\nwage_ranges <- c(1600.00, 5546.93, 9493.86, 13440.79, 17387.72, 21334.65)\ngroup_names <- c(\"super low\", \"low\", \"medium\", \"high\", \"super high\")\nmerged_table$wage_group <- cut(merged_table$Wage, breaks = wage_ranges, include.lowest = TRUE, labels = group_names)\nsavings_ranges <- c(-362.7011,3672.3091,7707.3193,11742.3296,15777.3398,19812.3500)\nmerged_table$savings_group <- cut(merged_table$Savings, breaks = savings_ranges, include.lowest = TRUE, labels = group_names)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#wage-vs.-education-level",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#wage-vs.-education-level",
    "title": "Exploring City of Engagement’s household demographic and spending patterns",
    "section": "Wage vs. Education level",
    "text": "Wage vs. Education level\nThe distribution across education levels are all right-skewed. ::: panel-tabset ## The plot"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#code-2",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#code-2",
    "title": "Exploring City of Engagement’s household demographic and spending patterns",
    "section": "Code",
    "text": "Code\n\nsummary_merged_table <- merged_table %>%\n  group_by(educationLevel) %>%\n  summarise(mean_wage = mean(Wage), sd_wage = sd(Wage))\n\nggplot(merged_table, aes(x = Wage)) +\n  geom_histogram(aes(y=..density..), binwidth = 500, color = \"grey25\", fill=\"grey90\") +\n  scale_y_continuous(labels = function(x) paste0(x*1000, \"k\")) +\n  labs(x = \"Wage\", y = \"Count\")+\n  ggtitle(\"Histogram of wage by Education Level\")+\n  geom_vline(data = summary_merged_table, aes(xintercept = mean_wage),\n             linetype = \"dashed\", size = 1) +\n  facet_wrap(~ educationLevel, ncol = 2)+\n  theme_minimal()\n\n:::\nNormal QQ plot is used to verify whether wage follows normal distribution among different education level.\nOut of 4 QQ plots, the tails of the distribution start deviating from the normal distribution line, which suggests that there are outliers or extreme values in each education level.\n\nLowHighSchoolOrCollegeBachelorGraduateCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Subset the data for a specific education level\nsubset_data_bachelor <- subset(merged_table, educationLevel == \"Bachelors\")\n\n# Check if the subsetted data contains valid values\nif (any(is.na(subset_data_bachelor$Wage)) || nrow(subset_data_bachelor) == 0) {\n  print(\"Subsetted data is empty or contains missing values.\")\n} else {\n  # Create the QQ plot of savings for the subsetted data\n  p1 <- qqnorm(subset_data_bachelor$Wage, main = \"QQ Plot of Wage - Bachelor's\")\n  qqline(subset_data_bachelor$Wage)\n}\n\n# Subset the data for a specific education level\nsubset_data_low <- subset(merged_table, educationLevel == \"Low\")\n\n# Check if the subsetted data contains valid values\nif (any(is.na(subset_data_low$Wage)) || nrow(subset_data_low) == 0) {\n  print(\"Subsetted data is empty or contains missing values.\")\n} else {\n  # Create the QQ plot of savings for the subsetted data\n  qqnorm(subset_data_low$Wage, main = \"QQ Plot of Wage - Low\")\n  qqline(subset_data_low$Wage)\n}\n\nsubset_data_graduate <- subset(merged_table, educationLevel == \"Graduate\")\n\n# Check if the subsetted data contains valid values\nif (any(is.na(subset_data_graduate$Wage)) || nrow(subset_data_graduate) == 0) {\n  print(\"Subsetted data is empty or contains missing values.\")\n} else {\n  # Create the QQ plot of savings for the subsetted data\n  qqnorm(subset_data_graduate$Wage, main = \"QQ Plot of Wage - Graduate\")\n  qqline(subset_data_graduate$Wage)\n}\n\nsubset_data_highschool <- subset(merged_table, educationLevel == \"HighSchoolOrCollege\")\n\n# Check if the subsetted data contains valid values\nif (any(is.na(subset_data_highschool$Wage)) || nrow(subset_data_highschool) == 0) {\n  print(\"Subsetted data is empty or contains missing values.\")\n} else {\n  # Create the QQ plot of savings for the subsetted data\n  qqnorm(subset_data_highschool$Wage, main = \"QQ Plot of Wage - HighSchoolOrCollege\")\n  qqline(subset_data_highschool$Wage)\n}\n\n\n\n\nSince it’s not normal distributed based on above QQ plots, we need to perform nonparametric test (Kruskal-Wallis) to perform the hypothesis testing.\nHypothesis assumptions:\nH0: there is no difference between wage across education levels\nH1: there is difference between wage across education levels\nFrom violin plot, it suggested that p-value is less than 0.05. We reject the null hypothesis, and fail to reject alternative hypothesis.\nConclusion: There is wage difference across education."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#one-way-anova-analysis",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#one-way-anova-analysis",
    "title": "Exploring City of Engagement’s household demographic and spending patterns",
    "section": "One-way ANOVA analysis",
    "text": "One-way ANOVA analysis\nTo check how much difference is it between each education level pairing, one-way anova is performed.\n\nThe plotCode\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(data = merged_table,\n               x = educationLevel, y = Wage,\n               xlab = \"Education Level\", ylab = \"Wage\",\n               type = \"np\", pairwise.comparisons = TRUE, pairwise.display = \"ns\", \n               mean.ci = TRUE, p.adjust.method = \"fdr\",\n              messages = FALSE) +\n  scale_y_continuous(limits = c(0, 15000))\n\n\n\n\nAs expected, graduate has the highest wage, followed by bachelors, highschool or college and Low. The wage difference between graduate and low is the hugest."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#tukeys-test",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#tukeys-test",
    "title": "Exploring City of Engagement’s household demographic and spending patterns",
    "section": "Tukey’s test",
    "text": "Tukey’s test\nTo determine if there are significant differences between the means of education levels after conducting an ANOVA, Tukey’s test is applied.\nIn summary, the Tukey’s test results indicate significant differences in the means between various groups. Here are the key findings:\n\n“Low” have a significantly lower mean compared to “Graduate” participants, with a mean difference of -3565.5254.\n“Graduate” have a significantly higher mean compared to “Bachelors” participants, with a mean difference of 1191.6695.\n\nThe p-values for all comparisons are reported as 0, indicating that the observed differences are statistically significant. The 95% confidence intervals for the mean differences do not include zero, further supporting the significant differences between the groups.\n\nTukeyHSD ResultCode\n\n\n\n\n\n\n\n\n\n\n\n\nanova_result <- aov(Wage ~ educationLevel, data = merged_table)\n\n# Perform Tukey's post hoc test for pairwise comparisons\ntukey_result <- TukeyHSD(anova_result)\ntukey_result\ntukey_summary <- tidy(tukey_result)\n\nDT::datatable(head(tukey_summary, 20))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#average-joviality-vs.-interest-group",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#average-joviality-vs.-interest-group",
    "title": "Exploring City of Engagement’s household demographic and spending patterns",
    "section": "Average joviality vs. interest group",
    "text": "Average joviality vs. interest group\nTo understand which interest group that participants joined has the highest joviality, we used the average joviality of each interest group.\nObservation: Interest group E has the highest joviality compared to others, with an average 0.53 and Interest group H has the lowest joviality with an average 0.45.\n\nThe plotCode\n\n\n\n\n\n\n\n\n\n\nmerged_table_joviality <- merged_table %>%\n  select(participantId, interestGroup, joviality) %>%\n  group_by(interestGroup)                 \n\nmerged_table_joviality <- unique(merged_table_joviality)\n\nmerged_table_joviality <- merged_table_joviality %>%\n  group_by(interestGroup) %>%\n  mutate(average_joviality = mean(joviality)) %>%\n  select(interestGroup, average_joviality) %>%\n  distinct()\n\n\nggdotplotstats(data = merged_table_joviality,\n               y = interestGroup,\n               x = average_joviality,\n               type = \"robust\",\n               title = \"Average joviality by Interest Group\",\n               xlab = \"Joviality\",\n               ggtheme = theme_bw())"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#average-joviality-vs.-interest-group-vs.-age_group",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#average-joviality-vs.-interest-group-vs.-age_group",
    "title": "Exploring City of Engagement’s household demographic and spending patterns",
    "section": "Average joviality vs. interest group vs. age_group",
    "text": "Average joviality vs. interest group vs. age_group\nTo see whether interest group and joviality is affected by age_group\n\nThe plotCode\n\n\n\n\n\n\n\n\n\n\n\n merged_table_joviality_age_group <- merged_table %>%\n  select(participantId, age_group,joviality, interestGroup) %>%\n  group_by(interestGroup, age_group) %>%\n  mutate(average_joviality = mean(joviality))%>%\n  distinct() %>%\n  select(age_group, interestGroup, average_joviality)\n\ntooltip <- function(y, ymax, accuracy = .01) {   \n  mean <- scales::number(y, accuracy = accuracy) \n  sem <- scales::number(ymax - y, accuracy = accuracy) \n  paste(\"Mean joviality:\", mean, \"+/-\", sem) \n}\n\ngg_point <- ggplot(data=merged_table_joviality_age_group, \n                   aes(x = reorder(interestGroup,age_group)),\n) +\n  stat_summary(aes(y = average_joviality, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,\n    fill = \"lightblue\"\n    \n  ) +\n  stat_summary(aes(y = average_joviality),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  ) +\n  facet_wrap(~age_group)+\n  coord_flip()+\n  theme_bw() +\n  \n  theme(legend.position = \"none\") +\n  theme(panel.grid = element_blank()) +\n  labs(title = \"Average joviality by Interest group by age\", \n       y = \"Average Joviality\", \n       x = \"Interest Group\") \n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\nTo see whether interest group and joviality is affected by wage_group\n\nThe plotCode\n\n\n\n\n\n\n\n\n\n\n\nmerged_table_joviality_wage_group <- merged_table %>%\n  select(participantId, wage_group,joviality, interestGroup) %>%\n  group_by(interestGroup, wage_group) %>%\n  mutate(average_joviality = mean(joviality))%>%\n  distinct() %>%\n  select(wage_group, interestGroup, average_joviality)\n\ntooltip <- function(y, ymax, accuracy = .01) {   \n  mean <- scales::number(y, accuracy = accuracy) \n  sem <- scales::number(ymax - y, accuracy = accuracy) \n  paste(\"Mean joviality:\", mean, \"+/-\", sem) \n}\n\ngg_point <- ggplot(data=merged_table_joviality_wage_group, \n                   aes(x = reorder(interestGroup,wage_group)),\n) +\n  stat_summary(aes(y = average_joviality, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,\n    fill = \"lightblue\"\n    \n  ) +\n  stat_summary(aes(y = average_joviality),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  ) +\n  facet_wrap(~wage_group)+\n  coord_flip()+\n  theme_bw() +\n  \n  theme(legend.position = \"none\") +\n  theme(panel.grid = element_blank()) +\n  labs(title = \"Average joviality by Interest group by age\", \n       y = \"Average Joviality\", \n       x = \"Interest Group\") \n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\nInterest group I is dominated among 39-46 age group and super low wage group. Super Low income seems to enjoy the most and participate most in Interest group. However, for those super high income group, their source of happiness doesn’t come from interest group and they participate least in interest group."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#correlation-between-savings-and-joviality",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_v2.html#correlation-between-savings-and-joviality",
    "title": "Exploring City of Engagement’s household demographic and spending patterns",
    "section": "Correlation between savings and joviality",
    "text": "Correlation between savings and joviality\nDoes it mean the more you earn, the happier you are?\nLet’s find out from below correlation plot:\n\nThe plotCode\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n data = merged_table,\nx = Savings,\ny = joviality,\nmarginal = FALSE) +\n  \n  theme_minimal() +\n  \n  labs(title = 'Correlation of Joviality and Savings', x = \"Savings\", y = \"Joviality\") +\n\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\")\n\n\n\n\nThere’s a negative relationship between joviality and savings. The more savings you have the less happy you are, which suggested that money cannot guarantee your happiness.\nTo have a closer look on which savings group have a higher joviality, we plot correlation between savings group. We break savings into 5 groups (super low, low, medium, high, super high) There is a strong negative correlation when people has a super low financial health.\n\nThe plotCode\n\n\n\n\n\n\n\n\n\n\np1 <- ggscatterstats(\n data = merged_table |>filter(savings_group == \"super low\"),\nx = Savings,\ny = joviality,\nmarginal = FALSE) +\n  \n  theme_minimal() +\n  \n  labs(x = \"Savings\", y = \"Joviality\") +\n\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\")\n\np2 <- ggscatterstats(\n data = merged_table |>filter(savings_group == \"low\"),\nx = Savings,\ny = joviality,\nmarginal = FALSE) +\n  \n  theme_minimal() +\n  \n  labs(x = \"Savings\", y = \"Joviality\") +\n\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\")\n\np3 <- ggscatterstats(\n data = merged_table |>filter(savings_group == \"medium\"),\nx = Savings,\ny = joviality,\nmarginal = FALSE) +\n  \n  theme_minimal() +\n  \n  labs(x = \"Savings\", y = \"Joviality\") +\n\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\")\n\np4 <- ggscatterstats(\n data = merged_table |>filter(savings_group == \"high\"),\nx = Savings,\ny = joviality,\nmarginal = FALSE) +\n  \n  theme_minimal() +\n  \n  labs(x = \"Savings\", y = \"Joviality\") +\n\ntheme(plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\")\n\np5 <- ggscatterstats(\n data = merged_table |>filter(savings_group == \"super high\"),\nx = Savings,\ny = joviality,\nmarginal = FALSE) +\n  \n  theme_minimal() +\n  \n  labs(x = \"Savings\", y = \"Joviality\") +\n\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\")\n\np1 + p2 + p3 + p4 + p5\n\n\n\n\nIt is interesting to note that individuals with super low income who exhibit remarkably highest average joviality scores of 0.75. Joviality exhibits a stronger negative correlation with lower income levels compared to wealthier individuals."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Identify companies that fit a pattern of illegal fishing",
    "section": "",
    "text": "pacman::p_load(jsonlite,tidygraph,ggraph, visNetwork, tidyverse, lubridate, plotly, DT, zoo, dplyr, ggplot2, tidyr)\n\n\n\n\n\nMC2 <- jsonlite::fromJSON(\"data/mc2_challenge_graph.json\")\n\n\n\n\n\n\n\n\nShow code\nmc2_nodes <- as_tibble(MC2$nodes)%>%\n  select(id, shpcountry, rcvcountry)\nDT::datatable(mc2_nodes, class = \"display\")\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nmc2_edges <- as_tibble(MC2$links) %>%\n  mutate(ArrivalDate = ymd(arrivaldate)) %>%\n  mutate(Year = year(ArrivalDate)) %>%\n  select(source, target, ArrivalDate, Year, hscode, valueofgoods_omu, \n         volumeteu, weightkg, valueofgoodsusd) %>% \n  distinct()\nDT::datatable(head(mc2_edges,20), class = \"display\")\n\n\n\n\n\n\n\n\n\n\nOur primary goal is to identify companies engaged in illegal fishing activities. In accordance with information from external sources, we need to focus on filtering out those companies with Harmonized System (HS) code prefixes ranging from 301 to 309.\n\n\nShow code\nmc2_edges_fishing <- mc2_edges %>%\n  filter(str_sub(hscode, 1, 3) %in% c(\"301\", \"302\", \"303\", \"304\", \"305\", \"306\", \"307\", \"308\", \"309\"))\n\n\n\n\n\nWe discovered that the columns “valueofgoodsusd” and “valueofgoods_omu” both contained missing values. Some rows, however, provided values in both of these columns. Utilizing this information, we were able to ascertain a conversion rate of 1.5384 (omu/usd). This conversion rate was subsequently employed to fill in the missing data in these columns.\n\n\nShow code\nconversion_rate <- 1.5384 \nmc2_edges_fishing$valueofgoodsusd <- ifelse(is.na(mc2_edges_fishing$valueofgoodsusd), \n                              round(mc2_edges_fishing$valueofgoods_omu / conversion_rate,0), \n                              mc2_edges_fishing$valueofgoodsusd)\nmc2_edges_fishing <- mc2_edges_fishing %>%\n  select(source, target, ArrivalDate, Year, hscode,volumeteu, weightkg, valueofgoodsusd)\n\n\n\n\n\nThe frequency of shipments for each unique pair of source and target, differentiated by their respective Harmonized System (HS) code and year. We aggregate edges, get the shipment counts and filter out those shipment counts greater than 20\n\n\nShow code\nmc2_edges_aggregated <- mc2_edges_fishing %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target) %>%\n  filter(weights > 20) %>%\n  ungroup()\n\n\n\n\n\n\nTo identify companies potentially involved in illegal fishing activities, we adopted a two approaches focusing on their shipment frequency and any abnormal fluctuations in shipment value over the years. Companies that exhibited both these characteristics were considered suspicious and were consequently flagged as possible illegal fishing entities.\n\n\nillegal fishing company significantly increases or decreases its shipment frequency suddenly, it can be a sign that the company is trying to avoid detection, manipulate market prices, or respond to changes in enforcement intensity. Approach: calculate an average shipping frequency over a 2 year period and get a list of companies with sudden changes in their shipment volume over each time period compared to their threshold.\n\n\nShow code\nmc2_edges_aggregated <- mc2_edges_aggregated %>%\n  arrange(source, target, Year) %>%\n  group_by(source, target) %>%\n  mutate(rolling_mean_frequency = rollmean(weights, k = 2, fill = NA))\nmc2_edges_aggregated <- mc2_edges_aggregated %>%\n  mutate(rolling_diff_frequency = rolling_mean_frequency - lag(rolling_mean_frequency)) \nthreshold <- 10  \nmc2_edges_aggregated_sudden_change_frequency <- mc2_edges_aggregated %>%\n  filter(abs(rolling_diff_frequency) > threshold)\ncompany_list_frequency <- unique(mc2_edges_aggregated_sudden_change_frequency$source)\n\n\n\n\n\nillegal fishing might under-declare the weight of their catch to minimize attention and lower duties or taxes. On the other side, might over-declare the value of their shipment to over-insure it. These would lead to an abnormally high value-weight ratio. Approach: To identify anomalies in the declared value of goods, we examine the shipment values in relation to the standard deviation and the average value of shipments for each fishing entity. If a shipment value surpasses the z-score threshold, we interpret it as an abnormal occurrence.\n\n\nShow code\nmc2_edges_fishing_stats <- mc2_edges_fishing %>%\n  group_by(source) %>%\n  summarise(mean_value = mean(valueofgoodsusd, na.rm = TRUE),\n            sd_value = sd(valueofgoodsusd, na.rm = TRUE))\nmc2_edges_fishing <- mc2_edges_fishing %>%\n  inner_join(mc2_edges_fishing_stats, by = \"source\")\nmc2_edges_fishing <- mc2_edges_fishing %>%\n  mutate(z_score = (valueofgoodsusd - mean_value) / sd_value)\nthreshold <- 2\nmc2_edges_fishing_abnormal <- mc2_edges_fishing %>%\n  filter(abs(z_score) > threshold)\ncompany_list <- unique(mc2_edges_fishing_abnormal$source)\n\n\n\n\n\ncompanies that violates both red flags\n\n\nShow code\nillegal_fishing_company <- intersect(company_list, company_list_frequency)\nillegal_fishing_company <- data.frame(Illegal_Fishing_Company = unlist(illegal_fishing_company))\ndatatable(illegal_fishing_company, options = list(pageLength = 5))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-preparation",
    "title": "Identify companies that fit a pattern of illegal fishing",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nStep 1. Filter edges that have the illegal fishing company\n\n\nShow code\nillegal_fishing_company <- intersect(company_list, company_list_frequency)\nillegal_fishing_company_aggregated_source <- mc2_edges_aggregated %>%\n  filter(source %in% illegal_fishing_company) \nillegal_fishing_company_aggregated_target <- mc2_edges_aggregated %>%\n  filter(target %in% illegal_fishing_company) \nillegal_fishing_company_aggregated <- rbind(illegal_fishing_company_aggregated_source, illegal_fishing_company_aggregated_target)\nillegal_fishing_company_aggregated <- illegal_fishing_company_aggregated %>%\n  select(source, target, hscode, Year, weights)\n\n\n\n\nStep 2. Filter nodes that have the illegal fishing company\n\n\nShow code\nid1 <- illegal_fishing_company_aggregated$source\nid2 <- illegal_fishing_company_aggregated$target\nillegal_fishing_company_nodes_extracted <- c(id1, id2) \nillegal_fishing_company_nodes_extracted <- unique(illegal_fishing_company_nodes_extracted)\nillegal_fishing_company_nodes_extracted <- data.frame(illegal_fishing_company_nodes_extracted)\nillegal_fishing_company_nodes_extracted <- rename(illegal_fishing_company_nodes_extracted, id = illegal_fishing_company_nodes_extracted)\n\n\n\n\nStep 3. Build tidy graph data model\n\n\nShow code\nmc2_graph <- tbl_graph(nodes = illegal_fishing_company_nodes_extracted,\n                           edges = illegal_fishing_company_aggregated,\n                           directed = TRUE)\nmc2_graph\n\n\n# A tbl_graph: 463 nodes and 2850 edges\n#\n# A directed acyclic multigraph with 7 components\n#\n# A tibble: 463 × 1\n  id                                             \n  <chr>                                          \n1 1 Ltd. Liability Co Cargo                      \n2 Adriatic Catch Ltd. Liability Co Transportation\n3 Adriatic Tuna AS Solutions                     \n4 Adriatic Tuna Ltd. Liability Co                \n5 Andhra Pradesh   Sextant Oyj Forwading         \n6 Angeline Sea NV Worldwide                      \n# ℹ 457 more rows\n#\n# A tibble: 2,850 × 5\n   from    to hscode  Year weights\n  <int> <int> <chr>  <dbl>   <int>\n1     1   204 306170  2028      68\n2     1   204 306170  2029      59\n3     1   204 306170  2030      26\n# ℹ 2,847 more rows\n\n\n\n\nStep 4. Prepare edges tibble data frame\n\n\nShow code\nedges_df <- mc2_graph %>%\n  activate(edges) %>%\n  as_tibble()\n\n\n\n\nStep 5. Prepare nodes tibble data frame\n\n\nShow code\nnodes_df <- mc2_graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label)\n\n\n##Visualise the Network graph\n\n\nNetwork plot\n\n\nShow code\nvisNetwork(nodes_df,\n           edges_df) %>%\n  visIgraphLayout(layout = \"layout_with_kk\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  }
]