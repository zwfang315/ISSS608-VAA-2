[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nBeyond ggplot2 Annotation:ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n             fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_economist()+\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_ipsum()+\n  ggtitle(\"Distribution of Maths scores\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_ipsum(axis_text_size = 18,\n              base_size = 15,\n    grid = \"Y\")+\n  ggtitle(\"Distribution of Maths scores\")\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np1 + p2\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n(p1 /p2) |p3\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np2 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\np2 + inset_element(p1,\n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\n\np1 <- ggplot(data = exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data = exam_data,\n       aes(x=ENGLISH))+\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 fill = \"grey90\",\n                 color = \"black\")+\n  theme_grey()+\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm, size = 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\npatchwork <- (p1 /p2) |p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Getting Started\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)\n\nImporting Data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nInteractive Data Visualisation - ggiraph methods\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\nDisplaying multiple information on tooltip\n\nexam_data$tooltip <- c(paste0(\"Name = \", exam_data$ID, \"\\n Class = \", exam_data$CLASS))\n\np <- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                    breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n  )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class_Ex01",
    "section": "",
    "text": "Getting started\n\npacman::p_load(tidyverse)\n\nImporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nggplot(data = exam_data,\n       aes(y=RACE))+\n  geom_bar()+\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"light blue\", color = \"light blue\", size = 0.5, linetype = \"solid\"),\n    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = \"white\"), \n    panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = \"white\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = reorder(RACE,RACE,\n                function(x)-length(x))))+\n         geom_bar()+\n  geom_text(stat=\"count\",\n            aes(label = paste0(..count.., \", \",\n            round(..count../sum(..count..)*100, 1), \"%\")), vjust = -0.5)+\n  ylim(0,220)+\n  ylab(\"No. of Pupils\")+\n  xlab(\"Race\")+\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS))+\n  geom_histogram(bins=20)\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS))+\n  geom_histogram(fill = \"light blue\",\n                 bins = 20,\n                 color = \"black\")+\n  geom_vline(aes(xintercept = mean(MATHS, na.rm = T)),\n             color = \"red\",\n             linetype = \"dashed\",\n             size = 1)+\n  geom_vline(aes(xintercept = median(MATHS, na.rm = T)),\n             color = \"dark blue\",\n             linetype = \"dashed\",\n             size = 1)\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= ENGLISH)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ GENDER)\n\n\n\n\n\ndata <- exam_data\nd_bg <- data[,-3]\n\nggplot(data=exam_data, \n       aes(x= ENGLISH, fill = GENDER)) +\n  geom_histogram(bins=20,\n                 color = \"black\")+\n  geom_histogram(data=d_bg, fill = \"grey\", alpha = .5)+\n    facet_wrap(~ GENDER)+\n      guides(fill = FALSE)+\n  theme_bw()+\n  ylim(0,30)\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> =\n\"none\")` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS,\n           y = ENGLISH))+\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n  geom_hline(yintercept = 50,\n             linetype=\"dashed\",\n             color = \"grey60\",\n             size=1)+\n  geom_vline(xintercept = 50,\n             linetype=\"dashed\",\n             color = \"grey60\",\n             size=1)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  }
]